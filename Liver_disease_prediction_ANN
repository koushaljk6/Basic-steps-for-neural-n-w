{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bd412cea",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-08-08T17:06:59.448089Z",
     "iopub.status.busy": "2024-08-08T17:06:59.447637Z",
     "iopub.status.idle": "2024-08-08T17:07:00.345598Z",
     "shell.execute_reply": "2024-08-08T17:07:00.344287Z"
    },
    "papermill": {
     "duration": 0.913843,
     "end_time": "2024-08-08T17:07:00.349343",
     "exception": false,
     "start_time": "2024-08-08T17:06:59.435500",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/indian-liver-patient-records/indian_liver_patient.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dd7ba29d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:00.373135Z",
     "iopub.status.busy": "2024-08-08T17:07:00.372621Z",
     "iopub.status.idle": "2024-08-08T17:07:01.699734Z",
     "shell.execute_reply": "2024-08-08T17:07:01.698360Z"
    },
    "papermill": {
     "duration": 1.341085,
     "end_time": "2024-08-08T17:07:01.702392",
     "exception": false,
     "start_time": "2024-08-08T17:07:00.361307",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c421aa54",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:01.725284Z",
     "iopub.status.busy": "2024-08-08T17:07:01.724539Z",
     "iopub.status.idle": "2024-08-08T17:07:01.746163Z",
     "shell.execute_reply": "2024-08-08T17:07:01.745114Z"
    },
    "papermill": {
     "duration": 0.035958,
     "end_time": "2024-08-08T17:07:01.749031",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.713073",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/indian-liver-patient-records/indian_liver_patient.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "350e3ff9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:01.771816Z",
     "iopub.status.busy": "2024-08-08T17:07:01.771377Z",
     "iopub.status.idle": "2024-08-08T17:07:01.799802Z",
     "shell.execute_reply": "2024-08-08T17:07:01.798578Z"
    },
    "papermill": {
     "duration": 0.042772,
     "end_time": "2024-08-08T17:07:01.802372",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.759600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Total_Bilirubin</th>\n",
       "      <th>Direct_Bilirubin</th>\n",
       "      <th>Alkaline_Phosphotase</th>\n",
       "      <th>Alamine_Aminotransferase</th>\n",
       "      <th>Aspartate_Aminotransferase</th>\n",
       "      <th>Total_Protiens</th>\n",
       "      <th>Albumin</th>\n",
       "      <th>Albumin_and_Globulin_Ratio</th>\n",
       "      <th>Dataset</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>65</td>\n",
       "      <td>Female</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>187</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "      <td>6.8</td>\n",
       "      <td>3.3</td>\n",
       "      <td>0.90</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>62</td>\n",
       "      <td>Male</td>\n",
       "      <td>10.9</td>\n",
       "      <td>5.5</td>\n",
       "      <td>699</td>\n",
       "      <td>64</td>\n",
       "      <td>100</td>\n",
       "      <td>7.5</td>\n",
       "      <td>3.2</td>\n",
       "      <td>0.74</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>62</td>\n",
       "      <td>Male</td>\n",
       "      <td>7.3</td>\n",
       "      <td>4.1</td>\n",
       "      <td>490</td>\n",
       "      <td>60</td>\n",
       "      <td>68</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.3</td>\n",
       "      <td>0.89</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>58</td>\n",
       "      <td>Male</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.4</td>\n",
       "      <td>182</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>6.8</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72</td>\n",
       "      <td>Male</td>\n",
       "      <td>3.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>195</td>\n",
       "      <td>27</td>\n",
       "      <td>59</td>\n",
       "      <td>7.3</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.40</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  Gender  Total_Bilirubin  Direct_Bilirubin  Alkaline_Phosphotase  \\\n",
       "0   65  Female              0.7               0.1                   187   \n",
       "1   62    Male             10.9               5.5                   699   \n",
       "2   62    Male              7.3               4.1                   490   \n",
       "3   58    Male              1.0               0.4                   182   \n",
       "4   72    Male              3.9               2.0                   195   \n",
       "\n",
       "   Alamine_Aminotransferase  Aspartate_Aminotransferase  Total_Protiens  \\\n",
       "0                        16                          18             6.8   \n",
       "1                        64                         100             7.5   \n",
       "2                        60                          68             7.0   \n",
       "3                        14                          20             6.8   \n",
       "4                        27                          59             7.3   \n",
       "\n",
       "   Albumin  Albumin_and_Globulin_Ratio  Dataset  \n",
       "0      3.3                        0.90        1  \n",
       "1      3.2                        0.74        1  \n",
       "2      3.3                        0.89        1  \n",
       "3      3.4                        1.00        1  \n",
       "4      2.4                        0.40        1  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2feae29d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:01.825521Z",
     "iopub.status.busy": "2024-08-08T17:07:01.825145Z",
     "iopub.status.idle": "2024-08-08T17:07:01.831957Z",
     "shell.execute_reply": "2024-08-08T17:07:01.830795Z"
    },
    "papermill": {
     "duration": 0.020595,
     "end_time": "2024-08-08T17:07:01.834172",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.813577",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(583, 11)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "78061362",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:01.857339Z",
     "iopub.status.busy": "2024-08-08T17:07:01.856348Z",
     "iopub.status.idle": "2024-08-08T17:07:01.880848Z",
     "shell.execute_reply": "2024-08-08T17:07:01.879777Z"
    },
    "papermill": {
     "duration": 0.038645,
     "end_time": "2024-08-08T17:07:01.883224",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.844579",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 583 entries, 0 to 582\n",
      "Data columns (total 11 columns):\n",
      " #   Column                      Non-Null Count  Dtype  \n",
      "---  ------                      --------------  -----  \n",
      " 0   Age                         583 non-null    int64  \n",
      " 1   Gender                      583 non-null    object \n",
      " 2   Total_Bilirubin             583 non-null    float64\n",
      " 3   Direct_Bilirubin            583 non-null    float64\n",
      " 4   Alkaline_Phosphotase        583 non-null    int64  \n",
      " 5   Alamine_Aminotransferase    583 non-null    int64  \n",
      " 6   Aspartate_Aminotransferase  583 non-null    int64  \n",
      " 7   Total_Protiens              583 non-null    float64\n",
      " 8   Albumin                     583 non-null    float64\n",
      " 9   Albumin_and_Globulin_Ratio  579 non-null    float64\n",
      " 10  Dataset                     583 non-null    int64  \n",
      "dtypes: float64(5), int64(5), object(1)\n",
      "memory usage: 50.2+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "248d8496",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:01.906029Z",
     "iopub.status.busy": "2024-08-08T17:07:01.905633Z",
     "iopub.status.idle": "2024-08-08T17:07:01.941810Z",
     "shell.execute_reply": "2024-08-08T17:07:01.940642Z"
    },
    "papermill": {
     "duration": 0.050358,
     "end_time": "2024-08-08T17:07:01.944093",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.893735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Total_Bilirubin</th>\n",
       "      <th>Direct_Bilirubin</th>\n",
       "      <th>Alkaline_Phosphotase</th>\n",
       "      <th>Alamine_Aminotransferase</th>\n",
       "      <th>Aspartate_Aminotransferase</th>\n",
       "      <th>Total_Protiens</th>\n",
       "      <th>Albumin</th>\n",
       "      <th>Albumin_and_Globulin_Ratio</th>\n",
       "      <th>Dataset</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>583.000000</td>\n",
       "      <td>579.000000</td>\n",
       "      <td>583.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>44.746141</td>\n",
       "      <td>3.298799</td>\n",
       "      <td>1.486106</td>\n",
       "      <td>290.576329</td>\n",
       "      <td>80.713551</td>\n",
       "      <td>109.910806</td>\n",
       "      <td>6.483190</td>\n",
       "      <td>3.141852</td>\n",
       "      <td>0.947064</td>\n",
       "      <td>1.286449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>16.189833</td>\n",
       "      <td>6.209522</td>\n",
       "      <td>2.808498</td>\n",
       "      <td>242.937989</td>\n",
       "      <td>182.620356</td>\n",
       "      <td>288.918529</td>\n",
       "      <td>1.085451</td>\n",
       "      <td>0.795519</td>\n",
       "      <td>0.319592</td>\n",
       "      <td>0.452490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>2.700000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>33.000000</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>175.500000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>5.800000</td>\n",
       "      <td>2.600000</td>\n",
       "      <td>0.700000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>45.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>208.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>3.100000</td>\n",
       "      <td>0.930000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>2.600000</td>\n",
       "      <td>1.300000</td>\n",
       "      <td>298.000000</td>\n",
       "      <td>60.500000</td>\n",
       "      <td>87.000000</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>90.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>19.700000</td>\n",
       "      <td>2110.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>4929.000000</td>\n",
       "      <td>9.600000</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>2.800000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age  Total_Bilirubin  Direct_Bilirubin  Alkaline_Phosphotase  \\\n",
       "count  583.000000       583.000000        583.000000            583.000000   \n",
       "mean    44.746141         3.298799          1.486106            290.576329   \n",
       "std     16.189833         6.209522          2.808498            242.937989   \n",
       "min      4.000000         0.400000          0.100000             63.000000   \n",
       "25%     33.000000         0.800000          0.200000            175.500000   \n",
       "50%     45.000000         1.000000          0.300000            208.000000   \n",
       "75%     58.000000         2.600000          1.300000            298.000000   \n",
       "max     90.000000        75.000000         19.700000           2110.000000   \n",
       "\n",
       "       Alamine_Aminotransferase  Aspartate_Aminotransferase  Total_Protiens  \\\n",
       "count                583.000000                  583.000000      583.000000   \n",
       "mean                  80.713551                  109.910806        6.483190   \n",
       "std                  182.620356                  288.918529        1.085451   \n",
       "min                   10.000000                   10.000000        2.700000   \n",
       "25%                   23.000000                   25.000000        5.800000   \n",
       "50%                   35.000000                   42.000000        6.600000   \n",
       "75%                   60.500000                   87.000000        7.200000   \n",
       "max                 2000.000000                 4929.000000        9.600000   \n",
       "\n",
       "          Albumin  Albumin_and_Globulin_Ratio     Dataset  \n",
       "count  583.000000                  579.000000  583.000000  \n",
       "mean     3.141852                    0.947064    1.286449  \n",
       "std      0.795519                    0.319592    0.452490  \n",
       "min      0.900000                    0.300000    1.000000  \n",
       "25%      2.600000                    0.700000    1.000000  \n",
       "50%      3.100000                    0.930000    1.000000  \n",
       "75%      3.800000                    1.100000    2.000000  \n",
       "max      5.500000                    2.800000    2.000000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2c295a48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:01.968236Z",
     "iopub.status.busy": "2024-08-08T17:07:01.967821Z",
     "iopub.status.idle": "2024-08-08T17:07:01.979567Z",
     "shell.execute_reply": "2024-08-08T17:07:01.978407Z"
    },
    "papermill": {
     "duration": 0.026871,
     "end_time": "2024-08-08T17:07:01.982269",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.955398",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                           False\n",
       "Gender                        False\n",
       "Total_Bilirubin               False\n",
       "Direct_Bilirubin              False\n",
       "Alkaline_Phosphotase          False\n",
       "Alamine_Aminotransferase      False\n",
       "Aspartate_Aminotransferase    False\n",
       "Total_Protiens                False\n",
       "Albumin                       False\n",
       "Albumin_and_Globulin_Ratio    False\n",
       "Dataset                       False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Albumin_and_Globulin_Ratio'] = df['Albumin_and_Globulin_Ratio'].fillna(df['Albumin_and_Globulin_Ratio'].median())\n",
    "df.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bbb5e0ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.006720Z",
     "iopub.status.busy": "2024-08-08T17:07:02.006338Z",
     "iopub.status.idle": "2024-08-08T17:07:02.015275Z",
     "shell.execute_reply": "2024-08-08T17:07:02.014039Z"
    },
    "papermill": {
     "duration": 0.023763,
     "end_time": "2024-08-08T17:07:02.017674",
     "exception": false,
     "start_time": "2024-08-08T17:07:01.993911",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                           0\n",
       "Gender                        0\n",
       "Total_Bilirubin               0\n",
       "Direct_Bilirubin              0\n",
       "Alkaline_Phosphotase          0\n",
       "Alamine_Aminotransferase      0\n",
       "Aspartate_Aminotransferase    0\n",
       "Total_Protiens                0\n",
       "Albumin                       0\n",
       "Albumin_and_Globulin_Ratio    0\n",
       "Dataset                       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8c990c52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.043241Z",
     "iopub.status.busy": "2024-08-08T17:07:02.042099Z",
     "iopub.status.idle": "2024-08-08T17:07:02.050672Z",
     "shell.execute_reply": "2024-08-08T17:07:02.049319Z"
    },
    "papermill": {
     "duration": 0.023902,
     "end_time": "2024-08-08T17:07:02.053158",
     "exception": false,
     "start_time": "2024-08-08T17:07:02.029256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 1 for infected, 0 for not infected\n",
    "df['Dataset'] = df['Dataset'].map({1:1, 2:0})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "de18c2d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.077795Z",
     "iopub.status.busy": "2024-08-08T17:07:02.076996Z",
     "iopub.status.idle": "2024-08-08T17:07:02.081902Z",
     "shell.execute_reply": "2024-08-08T17:07:02.080850Z"
    },
    "papermill": {
     "duration": 0.019766,
     "end_time": "2024-08-08T17:07:02.084209",
     "exception": false,
     "start_time": "2024-08-08T17:07:02.064443",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# plt.figure(figsize=(8, 6))\n",
    "# sns.pairplot(df, diag_kind='kde', hue='Dataset', palette='Reds')\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "efaad6b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.108244Z",
     "iopub.status.busy": "2024-08-08T17:07:02.107830Z",
     "iopub.status.idle": "2024-08-08T17:07:02.117072Z",
     "shell.execute_reply": "2024-08-08T17:07:02.115937Z"
    },
    "papermill": {
     "duration": 0.02374,
     "end_time": "2024-08-08T17:07:02.119287",
     "exception": false,
     "start_time": "2024-08-08T17:07:02.095547",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Male      441\n",
       "Female    142\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gender'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5b570ae9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.145765Z",
     "iopub.status.busy": "2024-08-08T17:07:02.145380Z",
     "iopub.status.idle": "2024-08-08T17:07:02.533426Z",
     "shell.execute_reply": "2024-08-08T17:07:02.532133Z"
    },
    "papermill": {
     "duration": 0.404312,
     "end_time": "2024-08-08T17:07:02.536912",
     "exception": false,
     "start_time": "2024-08-08T17:07:02.132600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Assuming 'df' is your DataFrame\n",
    "plt.figure(figsize=(8, 6))\n",
    "ax = sns.countplot(x='Gender', hue='Dataset', data=df, palette={0: 'green', 1 : 'red'})\n",
    "plt.title('Count of Patients by Gender and Liver Disease')\n",
    "plt.xlabel('Gender')\n",
    "plt.ylabel('Count')\n",
    "plt.legend(title='Liver', labels=['Not Infected', 'Infected'])\n",
    "\n",
    "# Add count labels on top of each bar\n",
    "for container in ax.containers:\n",
    "    ax.bar_label(container)\n",
    "\n",
    "#plt.xticks(ticks=[0, 1], labels=['Female', 'Male'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6d1b1c6b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.565821Z",
     "iopub.status.busy": "2024-08-08T17:07:02.564598Z",
     "iopub.status.idle": "2024-08-08T17:07:02.833354Z",
     "shell.execute_reply": "2024-08-08T17:07:02.832095Z"
    },
    "papermill": {
     "duration": 0.285504,
     "end_time": "2024-08-08T17:07:02.836709",
     "exception": false,
     "start_time": "2024-08-08T17:07:02.551205",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Calculate gender proportions for each liver category\n",
    "gender_counts_infected = df[df[\"Dataset\"] == 1][\"Gender\"].value_counts()\n",
    "gender_counts_not_infected = df[df[\"Dataset\"] == 0][\"Gender\"].value_counts()\n",
    "\n",
    "# Create two separate pie charts\n",
    "fig, axes = plt.subplots(1, 2, figsize=(12, 6))\n",
    "fig.suptitle(\"Gender Distribution by Liver Category\")\n",
    "\n",
    "# Pie chart for \"Infected\" liver category\n",
    "axes[0].pie(gender_counts_infected, labels=gender_counts_infected.index, autopct=\"%1.1f%%\", colors=[\"red\", \"orange\"])\n",
    "axes[0].set_title(\"Infected Liver\")\n",
    "\n",
    "# Pie chart for \"Not Infected\" liver category\n",
    "axes[1].pie(gender_counts_not_infected, labels=gender_counts_not_infected.index, autopct=\"%1.1f%%\", colors=[\"green\", \"lightgreen\"])\n",
    "axes[1].set_title(\"Not Infected Liver\")\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "aa9157eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:02.864722Z",
     "iopub.status.busy": "2024-08-08T17:07:02.863802Z",
     "iopub.status.idle": "2024-08-08T17:07:03.200132Z",
     "shell.execute_reply": "2024-08-08T17:07:03.198902Z"
    },
    "papermill": {
     "duration": 0.352531,
     "end_time": "2024-08-08T17:07:03.202696",
     "exception": false,
     "start_time": "2024-08-08T17:07:02.850165",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Group data by Gender and Dataset\n",
    "male_distribution = df[df['Gender'] == 'Male']['Dataset'].value_counts()\n",
    "female_distribution = df[df['Gender'] == 'Female']['Dataset'].value_counts()\n",
    "\n",
    "# Create subplots\n",
    "fig, axs = plt.subplots(1, 2, figsize=(12, 6))\n",
    "\n",
    "# Pie chart for males\n",
    "axs[0].pie(male_distribution, labels=['Not Infected', 'Infected'], autopct='%1.1f%%', startangle=140)\n",
    "axs[0].set_title('Male: Infected vs Not Infected')\n",
    "\n",
    "# Pie chart for females\n",
    "axs[1].pie(female_distribution, labels=['Not Infected', 'Infected'], autopct='%1.1f%%', startangle=140)\n",
    "axs[1].set_title('Female: Infected vs Not Infected')\n",
    "\n",
    "# Display the charts\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "82db2ecd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:03.230695Z",
     "iopub.status.busy": "2024-08-08T17:07:03.230337Z",
     "iopub.status.idle": "2024-08-08T17:07:03.249217Z",
     "shell.execute_reply": "2024-08-08T17:07:03.248096Z"
    },
    "papermill": {
     "duration": 0.035945,
     "end_time": "2024-08-08T17:07:03.251770",
     "exception": false,
     "start_time": "2024-08-08T17:07:03.215825",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Total_Bilirubin</th>\n",
       "      <th>Direct_Bilirubin</th>\n",
       "      <th>Alkaline_Phosphotase</th>\n",
       "      <th>Alamine_Aminotransferase</th>\n",
       "      <th>Aspartate_Aminotransferase</th>\n",
       "      <th>Total_Protiens</th>\n",
       "      <th>Albumin</th>\n",
       "      <th>Albumin_and_Globulin_Ratio</th>\n",
       "      <th>Dataset</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>187</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "      <td>6.8</td>\n",
       "      <td>3.3</td>\n",
       "      <td>0.90</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>10.9</td>\n",
       "      <td>5.5</td>\n",
       "      <td>699</td>\n",
       "      <td>64</td>\n",
       "      <td>100</td>\n",
       "      <td>7.5</td>\n",
       "      <td>3.2</td>\n",
       "      <td>0.74</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>4.1</td>\n",
       "      <td>490</td>\n",
       "      <td>60</td>\n",
       "      <td>68</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.3</td>\n",
       "      <td>0.89</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.4</td>\n",
       "      <td>182</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>6.8</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>195</td>\n",
       "      <td>27</td>\n",
       "      <td>59</td>\n",
       "      <td>7.3</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.40</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  Gender  Total_Bilirubin  Direct_Bilirubin  Alkaline_Phosphotase  \\\n",
       "0   65       1              0.7               0.1                   187   \n",
       "1   62       0             10.9               5.5                   699   \n",
       "2   62       0              7.3               4.1                   490   \n",
       "3   58       0              1.0               0.4                   182   \n",
       "4   72       0              3.9               2.0                   195   \n",
       "\n",
       "   Alamine_Aminotransferase  Aspartate_Aminotransferase  Total_Protiens  \\\n",
       "0                        16                          18             6.8   \n",
       "1                        64                         100             7.5   \n",
       "2                        60                          68             7.0   \n",
       "3                        14                          20             6.8   \n",
       "4                        27                          59             7.3   \n",
       "\n",
       "   Albumin  Albumin_and_Globulin_Ratio  Dataset  \n",
       "0      3.3                        0.90        1  \n",
       "1      3.2                        0.74        1  \n",
       "2      3.3                        0.89        1  \n",
       "3      3.4                        1.00        1  \n",
       "4      2.4                        0.40        1  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a new DataFrame with mapped 'Gender' column to find correlation\n",
    "new_df = df.copy()  # Make a copy of the original DataFrame\n",
    "\n",
    "# Map 'Gender' to numeric values\n",
    "new_df['Gender'] = new_df['Gender'].map({'Female': 1, 'Male': 0})\n",
    "new_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7376516b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:03.281788Z",
     "iopub.status.busy": "2024-08-08T17:07:03.280746Z",
     "iopub.status.idle": "2024-08-08T17:07:03.289630Z",
     "shell.execute_reply": "2024-08-08T17:07:03.288516Z"
    },
    "papermill": {
     "duration": 0.027515,
     "end_time": "2024-08-08T17:07:03.292765",
     "exception": false,
     "start_time": "2024-08-08T17:07:03.265250",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column Name | Sum of Zero Values\n",
      "Age | 0\n",
      "Total_Bilirubin | 0\n",
      "Direct_Bilirubin | 0\n",
      "Alkaline_Phosphotase | 0\n",
      "Alamine_Aminotransferase | 0\n",
      "Aspartate_Aminotransferase | 0\n",
      "Total_Protiens | 0\n",
      "Albumin | 0\n",
      "Albumin_and_Globulin_Ratio | 0\n"
     ]
    }
   ],
   "source": [
    "# Assuming your dataset is in a DataFrame called new_df\n",
    "# Exclude the \"Gender\" and \"Dataset\" columns\n",
    "columns_to_check = new_df.drop(columns=['Gender', 'Dataset'])\n",
    "\n",
    "# Check for zero values in the remaining columns\n",
    "zero_values = (columns_to_check == 0).sum()\n",
    "\n",
    "# Display the column names with the sum of zero values\n",
    "print(\"Column Name | Sum of Zero Values\")\n",
    "for column, count in zero_values.items():\n",
    "    print(f\"{column} | {count}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fd23bc03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:03.321976Z",
     "iopub.status.busy": "2024-08-08T17:07:03.321554Z",
     "iopub.status.idle": "2024-08-08T17:07:04.048798Z",
     "shell.execute_reply": "2024-08-08T17:07:04.047319Z"
    },
    "papermill": {
     "duration": 0.745174,
     "end_time": "2024-08-08T17:07:04.051557",
     "exception": false,
     "start_time": "2024-08-08T17:07:03.306383",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Calculate the correlation matrix\n",
    "correlation_matrix = new_df.corr()\n",
    "\n",
    "# Create a heatmap\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", vmin=-1, vmax=1)\n",
    "plt.title(\"Correlation Heatmap\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "05115ea1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:04.085904Z",
     "iopub.status.busy": "2024-08-08T17:07:04.085065Z",
     "iopub.status.idle": "2024-08-08T17:07:04.094913Z",
     "shell.execute_reply": "2024-08-08T17:07:04.093831Z"
    },
    "papermill": {
     "duration": 0.029555,
     "end_time": "2024-08-08T17:07:04.097212",
     "exception": false,
     "start_time": "2024-08-08T17:07:04.067657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Dataset                       1.000000\n",
       "Direct_Bilirubin              0.246046\n",
       "Total_Bilirubin               0.220208\n",
       "Alkaline_Phosphotase          0.184866\n",
       "Alamine_Aminotransferase      0.163416\n",
       "Aspartate_Aminotransferase    0.151934\n",
       "Age                           0.137351\n",
       "Total_Protiens               -0.035008\n",
       "Gender                       -0.082416\n",
       "Albumin                      -0.161388\n",
       "Albumin_and_Globulin_Ratio   -0.162144\n",
       "Name: Dataset, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.corr()['Dataset'].sort_values(ascending=False) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b87c8c37",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:04.130610Z",
     "iopub.status.busy": "2024-08-08T17:07:04.130242Z",
     "iopub.status.idle": "2024-08-08T17:07:04.147252Z",
     "shell.execute_reply": "2024-08-08T17:07:04.145965Z"
    },
    "papermill": {
     "duration": 0.036681,
     "end_time": "2024-08-08T17:07:04.149615",
     "exception": false,
     "start_time": "2024-08-08T17:07:04.112934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(583, 10)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = new_df.iloc[:,:-1].values\n",
    "y = new_df.iloc[:,-1].values\n",
    "X.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "69d926ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:04.183456Z",
     "iopub.status.busy": "2024-08-08T17:07:04.183055Z",
     "iopub.status.idle": "2024-08-08T17:07:04.357314Z",
     "shell.execute_reply": "2024-08-08T17:07:04.355991Z"
    },
    "papermill": {
     "duration": 0.194499,
     "end_time": "2024-08-08T17:07:04.360136",
     "exception": false,
     "start_time": "2024-08-08T17:07:04.165637",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "scaler = StandardScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "593c7037",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:04.396203Z",
     "iopub.status.busy": "2024-08-08T17:07:04.394956Z",
     "iopub.status.idle": "2024-08-08T17:07:04.402167Z",
     "shell.execute_reply": "2024-08-08T17:07:04.401068Z"
    },
    "papermill": {
     "duration": 0.027079,
     "end_time": "2024-08-08T17:07:04.404533",
     "exception": false,
     "start_time": "2024-08-08T17:07:04.377454",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = scaler.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c5ce1632",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:04.497715Z",
     "iopub.status.busy": "2024-08-08T17:07:04.496824Z",
     "iopub.status.idle": "2024-08-08T17:07:04.611477Z",
     "shell.execute_reply": "2024-08-08T17:07:04.610209Z"
    },
    "papermill": {
     "duration": 0.193583,
     "end_time": "2024-08-08T17:07:04.614251",
     "exception": false,
     "start_time": "2024-08-08T17:07:04.420668",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f3e65959",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:04.649165Z",
     "iopub.status.busy": "2024-08-08T17:07:04.648732Z",
     "iopub.status.idle": "2024-08-08T17:07:18.031044Z",
     "shell.execute_reply": "2024-08-08T17:07:18.029980Z"
    },
    "papermill": {
     "duration": 13.403022,
     "end_time": "2024-08-08T17:07:18.033651",
     "exception": false,
     "start_time": "2024-08-08T17:07:04.630629",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-08-08 17:07:06.693605: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-08-08 17:07:06.693769: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-08-08 17:07:06.832574: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "from tensorflow import keras\n",
    "from keras import Sequential\n",
    "from keras.layers import Dense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d516e021",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:18.068558Z",
     "iopub.status.busy": "2024-08-08T17:07:18.067856Z",
     "iopub.status.idle": "2024-08-08T17:07:18.162927Z",
     "shell.execute_reply": "2024-08-08T17:07:18.161827Z"
    },
    "papermill": {
     "duration": 0.115128,
     "end_time": "2024-08-08T17:07:18.165195",
     "exception": false,
     "start_time": "2024-08-08T17:07:18.050067",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(Dense(32,activation='relu',input_dim=10))\n",
    "model.add(Dense(1,activation='sigmoid'))\n",
    "\n",
    "model.compile(optimizer='Adam',loss='binary_crossentropy',metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "99290341",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:18.200648Z",
     "iopub.status.busy": "2024-08-08T17:07:18.200133Z",
     "iopub.status.idle": "2024-08-08T17:07:27.655410Z",
     "shell.execute_reply": "2024-08-08T17:07:27.654340Z"
    },
    "papermill": {
     "duration": 9.476375,
     "end_time": "2024-08-08T17:07:27.657861",
     "exception": false,
     "start_time": "2024-08-08T17:07:18.181486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 17ms/step - accuracy: 0.3609 - loss: 0.8475 - val_accuracy: 0.4110 - val_loss: 0.7682\n",
      "Epoch 2/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4439 - loss: 0.7639 - val_accuracy: 0.4521 - val_loss: 0.7041\n",
      "Epoch 3/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.4778 - loss: 0.6927 - val_accuracy: 0.5342 - val_loss: 0.6570\n",
      "Epoch 4/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.5956 - loss: 0.6462 - val_accuracy: 0.6027 - val_loss: 0.6241\n",
      "Epoch 5/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6709 - loss: 0.6232 - val_accuracy: 0.6438 - val_loss: 0.6011\n",
      "Epoch 6/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7157 - loss: 0.5883 - val_accuracy: 0.6918 - val_loss: 0.5845\n",
      "Epoch 7/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7517 - loss: 0.5628 - val_accuracy: 0.6986 - val_loss: 0.5734\n",
      "Epoch 8/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7012 - loss: 0.5631 - val_accuracy: 0.6986 - val_loss: 0.5645\n",
      "Epoch 9/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7041 - loss: 0.5419 - val_accuracy: 0.7055 - val_loss: 0.5586\n",
      "Epoch 10/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7283 - loss: 0.5287 - val_accuracy: 0.7123 - val_loss: 0.5554\n",
      "Epoch 11/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6815 - loss: 0.5401 - val_accuracy: 0.7123 - val_loss: 0.5507\n",
      "Epoch 12/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7266 - loss: 0.5042 - val_accuracy: 0.7123 - val_loss: 0.5479\n",
      "Epoch 13/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6781 - loss: 0.5421 - val_accuracy: 0.7123 - val_loss: 0.5454\n",
      "Epoch 14/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7273 - loss: 0.5452 - val_accuracy: 0.7055 - val_loss: 0.5438\n",
      "Epoch 15/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7566 - loss: 0.4923 - val_accuracy: 0.7192 - val_loss: 0.5422\n",
      "Epoch 16/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7136 - loss: 0.5299 - val_accuracy: 0.7260 - val_loss: 0.5399\n",
      "Epoch 17/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7342 - loss: 0.5014 - val_accuracy: 0.7260 - val_loss: 0.5385\n",
      "Epoch 18/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7245 - loss: 0.5137 - val_accuracy: 0.7192 - val_loss: 0.5373\n",
      "Epoch 19/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7308 - loss: 0.4980 - val_accuracy: 0.7192 - val_loss: 0.5366\n",
      "Epoch 20/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7222 - loss: 0.5118 - val_accuracy: 0.7260 - val_loss: 0.5363\n",
      "Epoch 21/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7326 - loss: 0.5259 - val_accuracy: 0.7123 - val_loss: 0.5345\n",
      "Epoch 22/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7356 - loss: 0.4974 - val_accuracy: 0.7123 - val_loss: 0.5345\n",
      "Epoch 23/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7461 - loss: 0.4812 - val_accuracy: 0.7123 - val_loss: 0.5345\n",
      "Epoch 24/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7545 - loss: 0.4757 - val_accuracy: 0.7123 - val_loss: 0.5330\n",
      "Epoch 25/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7331 - loss: 0.4910 - val_accuracy: 0.7123 - val_loss: 0.5323\n",
      "Epoch 26/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7262 - loss: 0.5324 - val_accuracy: 0.7192 - val_loss: 0.5332\n",
      "Epoch 27/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7109 - loss: 0.5158 - val_accuracy: 0.7260 - val_loss: 0.5306\n",
      "Epoch 28/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7323 - loss: 0.4798 - val_accuracy: 0.7192 - val_loss: 0.5313\n",
      "Epoch 29/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7484 - loss: 0.4915 - val_accuracy: 0.7192 - val_loss: 0.5315\n",
      "Epoch 30/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7415 - loss: 0.4810 - val_accuracy: 0.7192 - val_loss: 0.5305\n",
      "Epoch 31/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7673 - loss: 0.4842 - val_accuracy: 0.7192 - val_loss: 0.5293\n",
      "Epoch 32/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7337 - loss: 0.4918 - val_accuracy: 0.7260 - val_loss: 0.5290\n",
      "Epoch 33/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7401 - loss: 0.4947 - val_accuracy: 0.7260 - val_loss: 0.5297\n",
      "Epoch 34/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7487 - loss: 0.5035 - val_accuracy: 0.7260 - val_loss: 0.5297\n",
      "Epoch 35/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7541 - loss: 0.4952 - val_accuracy: 0.7260 - val_loss: 0.5288\n",
      "Epoch 36/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7277 - loss: 0.5309 - val_accuracy: 0.7329 - val_loss: 0.5281\n",
      "Epoch 37/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7403 - loss: 0.5127 - val_accuracy: 0.7397 - val_loss: 0.5271\n",
      "Epoch 38/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7520 - loss: 0.5104 - val_accuracy: 0.7329 - val_loss: 0.5273\n",
      "Epoch 39/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7949 - loss: 0.4454 - val_accuracy: 0.7329 - val_loss: 0.5284\n",
      "Epoch 40/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7598 - loss: 0.4766 - val_accuracy: 0.7329 - val_loss: 0.5271\n",
      "Epoch 41/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7389 - loss: 0.4926 - val_accuracy: 0.7329 - val_loss: 0.5276\n",
      "Epoch 42/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7493 - loss: 0.4805 - val_accuracy: 0.7329 - val_loss: 0.5265\n",
      "Epoch 43/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7389 - loss: 0.4960 - val_accuracy: 0.7329 - val_loss: 0.5255\n",
      "Epoch 44/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7603 - loss: 0.4651 - val_accuracy: 0.7329 - val_loss: 0.5260\n",
      "Epoch 45/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7727 - loss: 0.4946 - val_accuracy: 0.7329 - val_loss: 0.5245\n",
      "Epoch 46/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7606 - loss: 0.4754 - val_accuracy: 0.7329 - val_loss: 0.5251\n",
      "Epoch 47/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7461 - loss: 0.4947 - val_accuracy: 0.7192 - val_loss: 0.5239\n",
      "Epoch 48/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7704 - loss: 0.4920 - val_accuracy: 0.7192 - val_loss: 0.5257\n",
      "Epoch 49/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7646 - loss: 0.4749 - val_accuracy: 0.7192 - val_loss: 0.5254\n",
      "Epoch 50/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7477 - loss: 0.4991 - val_accuracy: 0.7123 - val_loss: 0.5259\n",
      "Epoch 51/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7592 - loss: 0.4902 - val_accuracy: 0.7192 - val_loss: 0.5244\n",
      "Epoch 52/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7780 - loss: 0.4563 - val_accuracy: 0.7192 - val_loss: 0.5247\n",
      "Epoch 53/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7653 - loss: 0.4674 - val_accuracy: 0.7260 - val_loss: 0.5253\n",
      "Epoch 54/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7812 - loss: 0.4487 - val_accuracy: 0.7055 - val_loss: 0.5255\n",
      "Epoch 55/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7695 - loss: 0.4779 - val_accuracy: 0.7192 - val_loss: 0.5262\n",
      "Epoch 56/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7494 - loss: 0.4980 - val_accuracy: 0.7055 - val_loss: 0.5247\n",
      "Epoch 57/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7379 - loss: 0.4913 - val_accuracy: 0.7192 - val_loss: 0.5247\n",
      "Epoch 58/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7704 - loss: 0.4745 - val_accuracy: 0.7192 - val_loss: 0.5265\n",
      "Epoch 59/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7664 - loss: 0.4593 - val_accuracy: 0.7192 - val_loss: 0.5271\n",
      "Epoch 60/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7677 - loss: 0.4923 - val_accuracy: 0.6986 - val_loss: 0.5257\n",
      "Epoch 61/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7494 - loss: 0.4861 - val_accuracy: 0.7055 - val_loss: 0.5257\n",
      "Epoch 62/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7222 - loss: 0.4850 - val_accuracy: 0.7192 - val_loss: 0.5259\n",
      "Epoch 63/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7271 - loss: 0.5096 - val_accuracy: 0.7123 - val_loss: 0.5263\n",
      "Epoch 64/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7461 - loss: 0.4655 - val_accuracy: 0.7192 - val_loss: 0.5258\n",
      "Epoch 65/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7490 - loss: 0.4727 - val_accuracy: 0.7123 - val_loss: 0.5261\n",
      "Epoch 66/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7553 - loss: 0.4638 - val_accuracy: 0.7055 - val_loss: 0.5254\n",
      "Epoch 67/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7293 - loss: 0.4724 - val_accuracy: 0.7260 - val_loss: 0.5247\n",
      "Epoch 68/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7805 - loss: 0.4285 - val_accuracy: 0.7192 - val_loss: 0.5249\n",
      "Epoch 69/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7439 - loss: 0.4844 - val_accuracy: 0.7192 - val_loss: 0.5252\n",
      "Epoch 70/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7183 - loss: 0.4990 - val_accuracy: 0.7192 - val_loss: 0.5250\n",
      "Epoch 71/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7237 - loss: 0.4768 - val_accuracy: 0.7260 - val_loss: 0.5251\n",
      "Epoch 72/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7292 - loss: 0.4674 - val_accuracy: 0.7192 - val_loss: 0.5242\n",
      "Epoch 73/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7189 - loss: 0.4861 - val_accuracy: 0.7260 - val_loss: 0.5240\n",
      "Epoch 74/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7370 - loss: 0.4521 - val_accuracy: 0.7260 - val_loss: 0.5239\n",
      "Epoch 75/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7513 - loss: 0.4764 - val_accuracy: 0.7260 - val_loss: 0.5250\n",
      "Epoch 76/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7470 - loss: 0.4612 - val_accuracy: 0.7192 - val_loss: 0.5258\n",
      "Epoch 77/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7579 - loss: 0.4668 - val_accuracy: 0.7260 - val_loss: 0.5222\n",
      "Epoch 78/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7412 - loss: 0.4814 - val_accuracy: 0.7329 - val_loss: 0.5212\n",
      "Epoch 79/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7324 - loss: 0.4890 - val_accuracy: 0.7329 - val_loss: 0.5229\n",
      "Epoch 80/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7568 - loss: 0.4755 - val_accuracy: 0.7192 - val_loss: 0.5227\n",
      "Epoch 81/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7541 - loss: 0.4631 - val_accuracy: 0.7260 - val_loss: 0.5223\n",
      "Epoch 82/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7288 - loss: 0.4730 - val_accuracy: 0.7260 - val_loss: 0.5230\n",
      "Epoch 83/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7240 - loss: 0.4839 - val_accuracy: 0.7329 - val_loss: 0.5216\n",
      "Epoch 84/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7886 - loss: 0.4522 - val_accuracy: 0.7192 - val_loss: 0.5244\n",
      "Epoch 85/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7550 - loss: 0.4625 - val_accuracy: 0.7329 - val_loss: 0.5229\n",
      "Epoch 86/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7749 - loss: 0.4508 - val_accuracy: 0.7192 - val_loss: 0.5238\n",
      "Epoch 87/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7798 - loss: 0.4591 - val_accuracy: 0.7192 - val_loss: 0.5240\n",
      "Epoch 88/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7355 - loss: 0.4551 - val_accuracy: 0.7329 - val_loss: 0.5202\n",
      "Epoch 89/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7131 - loss: 0.4842 - val_accuracy: 0.7329 - val_loss: 0.5216\n",
      "Epoch 90/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7689 - loss: 0.4596 - val_accuracy: 0.7260 - val_loss: 0.5227\n",
      "Epoch 91/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7427 - loss: 0.4695 - val_accuracy: 0.7260 - val_loss: 0.5230\n",
      "Epoch 92/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7709 - loss: 0.4745 - val_accuracy: 0.7192 - val_loss: 0.5230\n",
      "Epoch 93/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7706 - loss: 0.4617 - val_accuracy: 0.7466 - val_loss: 0.5220\n",
      "Epoch 94/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7564 - loss: 0.4509 - val_accuracy: 0.7466 - val_loss: 0.5218\n",
      "Epoch 95/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7418 - loss: 0.4817 - val_accuracy: 0.7192 - val_loss: 0.5218\n",
      "Epoch 96/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7642 - loss: 0.4753 - val_accuracy: 0.7260 - val_loss: 0.5211\n",
      "Epoch 97/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7185 - loss: 0.5111 - val_accuracy: 0.7329 - val_loss: 0.5212\n",
      "Epoch 98/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7362 - loss: 0.4684 - val_accuracy: 0.7397 - val_loss: 0.5211\n",
      "Epoch 99/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7166 - loss: 0.4744 - val_accuracy: 0.7329 - val_loss: 0.5220\n",
      "Epoch 100/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7287 - loss: 0.4966 - val_accuracy: 0.7329 - val_loss: 0.5210\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7975dc3540a0>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train,y_train,batch_size=32,epochs=100, validation_data=(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "fac16789",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:27.732900Z",
     "iopub.status.busy": "2024-08-08T17:07:27.732405Z",
     "iopub.status.idle": "2024-08-08T17:07:27.983218Z",
     "shell.execute_reply": "2024-08-08T17:07:27.982029Z"
    },
    "papermill": {
     "duration": 0.290948,
     "end_time": "2024-08-08T17:07:27.985847",
     "exception": false,
     "start_time": "2024-08-08T17:07:27.694899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import keras_tuner as kt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "72ca5df8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:28.060225Z",
     "iopub.status.busy": "2024-08-08T17:07:28.059804Z",
     "iopub.status.idle": "2024-08-08T17:07:28.066472Z",
     "shell.execute_reply": "2024-08-08T17:07:28.065360Z"
    },
    "papermill": {
     "duration": 0.046326,
     "end_time": "2024-08-08T17:07:28.068693",
     "exception": false,
     "start_time": "2024-08-08T17:07:28.022367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def build_model(hp):\n",
    "    \n",
    "    model = Sequential()\n",
    "    \n",
    "    model.add(Dense(32,activation='relu',input_dim=10))\n",
    "    model.add(Dense(1,activation='sigmoid'))\n",
    "    \n",
    "    my_optimizer = hp.Choice('my optimizers',['adam','sgd','adagrad','adadelta','rmsprop'])\n",
    "\n",
    "    model.compile(optimizer=my_optimizer, loss='binary_crossentropy', metrics=['accuracy'])\n",
    "    \n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e214ba89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:28.142951Z",
     "iopub.status.busy": "2024-08-08T17:07:28.142544Z",
     "iopub.status.idle": "2024-08-08T17:07:28.177130Z",
     "shell.execute_reply": "2024-08-08T17:07:28.176171Z"
    },
    "papermill": {
     "duration": 0.07489,
     "end_time": "2024-08-08T17:07:28.180132",
     "exception": false,
     "start_time": "2024-08-08T17:07:28.105242",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuner = kt.RandomSearch(build_model,\n",
    "                       objective='val_accuracy',\n",
    "                       max_trials=5,\n",
    "                       directory='best_optimizer')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "281b8f81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:28.255248Z",
     "iopub.status.busy": "2024-08-08T17:07:28.254838Z",
     "iopub.status.idle": "2024-08-08T17:07:37.936551Z",
     "shell.execute_reply": "2024-08-08T17:07:37.935180Z"
    },
    "papermill": {
     "duration": 9.723182,
     "end_time": "2024-08-08T17:07:37.939050",
     "exception": false,
     "start_time": "2024-08-08T17:07:28.215868",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trial 5 Complete [00h 00m 02s]\n",
      "val_accuracy: 0.6780821681022644\n",
      "\n",
      "Best val_accuracy So Far: 0.7054794430732727\n",
      "Total elapsed time: 00h 00m 10s\n"
     ]
    }
   ],
   "source": [
    "tuner.search(X_train,y_train,epochs=5,validation_data=(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "74a2add9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:38.013828Z",
     "iopub.status.busy": "2024-08-08T17:07:38.012861Z",
     "iopub.status.idle": "2024-08-08T17:07:38.020310Z",
     "shell.execute_reply": "2024-08-08T17:07:38.019233Z"
    },
    "papermill": {
     "duration": 0.047243,
     "end_time": "2024-08-08T17:07:38.022681",
     "exception": false,
     "start_time": "2024-08-08T17:07:37.975438",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'my optimizers': 'rmsprop'}"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuner.get_best_hyperparameters()[0].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a5a92d78",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:38.097602Z",
     "iopub.status.busy": "2024-08-08T17:07:38.097207Z",
     "iopub.status.idle": "2024-08-08T17:07:38.706335Z",
     "shell.execute_reply": "2024-08-08T17:07:38.705270Z"
    },
    "papermill": {
     "duration": 0.648965,
     "end_time": "2024-08-08T17:07:38.708733",
     "exception": false,
     "start_time": "2024-08-08T17:07:38.059768",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/saving/saving_lib.py:576: UserWarning: Skipping variable loading for optimizer 'rmsprop', because it has 2 variables whereas the saved optimizer has 6 variables. \n",
      "  saveable.load_own_variables(weights_store.get(inner_path))\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">352</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">33</span> │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)             │           \u001b[38;5;34m352\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m33\u001b[0m │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">385</span> (1.50 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m385\u001b[0m (1.50 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">385</span> (1.50 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m385\u001b[0m (1.50 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = tuner.get_best_models(num_models=1)[0]\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b8a3d003",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:38.784849Z",
     "iopub.status.busy": "2024-08-08T17:07:38.784454Z",
     "iopub.status.idle": "2024-08-08T17:07:47.577825Z",
     "shell.execute_reply": "2024-08-08T17:07:47.576765Z"
    },
    "papermill": {
     "duration": 8.834702,
     "end_time": "2024-08-08T17:07:47.580321",
     "exception": false,
     "start_time": "2024-08-08T17:07:38.745619",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 7/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 17ms/step - accuracy: 0.6695 - loss: 0.5474 - val_accuracy: 0.7192 - val_loss: 0.5521\n",
      "Epoch 8/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7058 - loss: 0.5349 - val_accuracy: 0.7260 - val_loss: 0.5471\n",
      "Epoch 9/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7126 - loss: 0.5138 - val_accuracy: 0.7329 - val_loss: 0.5439\n",
      "Epoch 10/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7361 - loss: 0.4888 - val_accuracy: 0.7329 - val_loss: 0.5413\n",
      "Epoch 11/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7062 - loss: 0.5288 - val_accuracy: 0.7260 - val_loss: 0.5390\n",
      "Epoch 12/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7312 - loss: 0.4952 - val_accuracy: 0.7192 - val_loss: 0.5364\n",
      "Epoch 13/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6816 - loss: 0.5296 - val_accuracy: 0.7192 - val_loss: 0.5349\n",
      "Epoch 14/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7076 - loss: 0.5079 - val_accuracy: 0.7055 - val_loss: 0.5338\n",
      "Epoch 15/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7303 - loss: 0.5120 - val_accuracy: 0.7055 - val_loss: 0.5328\n",
      "Epoch 16/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7195 - loss: 0.4868 - val_accuracy: 0.7055 - val_loss: 0.5320\n",
      "Epoch 17/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7257 - loss: 0.4801 - val_accuracy: 0.7055 - val_loss: 0.5309\n",
      "Epoch 18/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6848 - loss: 0.5356 - val_accuracy: 0.7123 - val_loss: 0.5300\n",
      "Epoch 19/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7272 - loss: 0.5271 - val_accuracy: 0.7123 - val_loss: 0.5291\n",
      "Epoch 20/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7085 - loss: 0.5056 - val_accuracy: 0.7123 - val_loss: 0.5281\n",
      "Epoch 21/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6923 - loss: 0.5208 - val_accuracy: 0.7123 - val_loss: 0.5279\n",
      "Epoch 22/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7093 - loss: 0.5075 - val_accuracy: 0.7055 - val_loss: 0.5270\n",
      "Epoch 23/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6979 - loss: 0.5110 - val_accuracy: 0.7055 - val_loss: 0.5268\n",
      "Epoch 24/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7222 - loss: 0.5053 - val_accuracy: 0.7055 - val_loss: 0.5262\n",
      "Epoch 25/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7313 - loss: 0.4908 - val_accuracy: 0.6986 - val_loss: 0.5257\n",
      "Epoch 26/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7440 - loss: 0.4987 - val_accuracy: 0.6986 - val_loss: 0.5249\n",
      "Epoch 27/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7104 - loss: 0.5104 - val_accuracy: 0.6986 - val_loss: 0.5249\n",
      "Epoch 28/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7102 - loss: 0.5019 - val_accuracy: 0.7123 - val_loss: 0.5243\n",
      "Epoch 29/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7229 - loss: 0.4949 - val_accuracy: 0.6986 - val_loss: 0.5247\n",
      "Epoch 30/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7334 - loss: 0.4795 - val_accuracy: 0.7123 - val_loss: 0.5238\n",
      "Epoch 31/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7506 - loss: 0.4948 - val_accuracy: 0.7192 - val_loss: 0.5235\n",
      "Epoch 32/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7289 - loss: 0.4927 - val_accuracy: 0.6986 - val_loss: 0.5235\n",
      "Epoch 33/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7114 - loss: 0.5059 - val_accuracy: 0.7192 - val_loss: 0.5235\n",
      "Epoch 34/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7342 - loss: 0.4514 - val_accuracy: 0.6986 - val_loss: 0.5236\n",
      "Epoch 35/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7430 - loss: 0.4633 - val_accuracy: 0.6986 - val_loss: 0.5232\n",
      "Epoch 36/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7156 - loss: 0.4713 - val_accuracy: 0.6986 - val_loss: 0.5234\n",
      "Epoch 37/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7420 - loss: 0.4658 - val_accuracy: 0.7123 - val_loss: 0.5233\n",
      "Epoch 38/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7384 - loss: 0.4750 - val_accuracy: 0.7123 - val_loss: 0.5229\n",
      "Epoch 39/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7297 - loss: 0.4676 - val_accuracy: 0.7123 - val_loss: 0.5223\n",
      "Epoch 40/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7365 - loss: 0.4798 - val_accuracy: 0.7055 - val_loss: 0.5223\n",
      "Epoch 41/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7381 - loss: 0.4842 - val_accuracy: 0.7123 - val_loss: 0.5218\n",
      "Epoch 42/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6978 - loss: 0.4989 - val_accuracy: 0.7055 - val_loss: 0.5224\n",
      "Epoch 43/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7223 - loss: 0.4830 - val_accuracy: 0.7192 - val_loss: 0.5219\n",
      "Epoch 44/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7244 - loss: 0.4989 - val_accuracy: 0.7123 - val_loss: 0.5218\n",
      "Epoch 45/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7384 - loss: 0.4766 - val_accuracy: 0.7192 - val_loss: 0.5221\n",
      "Epoch 46/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7133 - loss: 0.4809 - val_accuracy: 0.7192 - val_loss: 0.5213\n",
      "Epoch 47/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7190 - loss: 0.4955 - val_accuracy: 0.7192 - val_loss: 0.5211\n",
      "Epoch 48/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7344 - loss: 0.4836 - val_accuracy: 0.7192 - val_loss: 0.5205\n",
      "Epoch 49/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7232 - loss: 0.4774 - val_accuracy: 0.7260 - val_loss: 0.5202\n",
      "Epoch 50/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6983 - loss: 0.5289 - val_accuracy: 0.7260 - val_loss: 0.5206\n",
      "Epoch 51/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7301 - loss: 0.4952 - val_accuracy: 0.7260 - val_loss: 0.5203\n",
      "Epoch 52/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7203 - loss: 0.5039 - val_accuracy: 0.7192 - val_loss: 0.5196\n",
      "Epoch 53/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7486 - loss: 0.4829 - val_accuracy: 0.7123 - val_loss: 0.5191\n",
      "Epoch 54/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7384 - loss: 0.4719 - val_accuracy: 0.7123 - val_loss: 0.5192\n",
      "Epoch 55/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7535 - loss: 0.4673 - val_accuracy: 0.7123 - val_loss: 0.5187\n",
      "Epoch 56/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7484 - loss: 0.4734 - val_accuracy: 0.7192 - val_loss: 0.5177\n",
      "Epoch 57/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7214 - loss: 0.5006 - val_accuracy: 0.7123 - val_loss: 0.5183\n",
      "Epoch 58/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7127 - loss: 0.4739 - val_accuracy: 0.7123 - val_loss: 0.5183\n",
      "Epoch 59/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7472 - loss: 0.4488 - val_accuracy: 0.7192 - val_loss: 0.5174\n",
      "Epoch 60/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7347 - loss: 0.5045 - val_accuracy: 0.7192 - val_loss: 0.5175\n",
      "Epoch 61/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7436 - loss: 0.4582 - val_accuracy: 0.7123 - val_loss: 0.5167\n",
      "Epoch 62/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7437 - loss: 0.4509 - val_accuracy: 0.7123 - val_loss: 0.5171\n",
      "Epoch 63/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7146 - loss: 0.5072 - val_accuracy: 0.7123 - val_loss: 0.5169\n",
      "Epoch 64/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7487 - loss: 0.4746 - val_accuracy: 0.7123 - val_loss: 0.5168\n",
      "Epoch 65/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7384 - loss: 0.4820 - val_accuracy: 0.7192 - val_loss: 0.5176\n",
      "Epoch 66/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7659 - loss: 0.4575 - val_accuracy: 0.7123 - val_loss: 0.5173\n",
      "Epoch 67/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7550 - loss: 0.4660 - val_accuracy: 0.7123 - val_loss: 0.5170\n",
      "Epoch 68/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7199 - loss: 0.4942 - val_accuracy: 0.7192 - val_loss: 0.5170\n",
      "Epoch 69/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7256 - loss: 0.4888 - val_accuracy: 0.7192 - val_loss: 0.5169\n",
      "Epoch 70/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7284 - loss: 0.4972 - val_accuracy: 0.7192 - val_loss: 0.5175\n",
      "Epoch 71/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7746 - loss: 0.4586 - val_accuracy: 0.7123 - val_loss: 0.5169\n",
      "Epoch 72/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7593 - loss: 0.4462 - val_accuracy: 0.7123 - val_loss: 0.5169\n",
      "Epoch 73/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7417 - loss: 0.4710 - val_accuracy: 0.7123 - val_loss: 0.5168\n",
      "Epoch 74/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7297 - loss: 0.4840 - val_accuracy: 0.7192 - val_loss: 0.5169\n",
      "Epoch 75/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7598 - loss: 0.4653 - val_accuracy: 0.7192 - val_loss: 0.5162\n",
      "Epoch 76/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7707 - loss: 0.4455 - val_accuracy: 0.7192 - val_loss: 0.5153\n",
      "Epoch 77/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7286 - loss: 0.4564 - val_accuracy: 0.7192 - val_loss: 0.5152\n",
      "Epoch 78/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7636 - loss: 0.4832 - val_accuracy: 0.7192 - val_loss: 0.5151\n",
      "Epoch 79/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7570 - loss: 0.4571 - val_accuracy: 0.7192 - val_loss: 0.5153\n",
      "Epoch 80/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7437 - loss: 0.4511 - val_accuracy: 0.7192 - val_loss: 0.5153\n",
      "Epoch 81/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7705 - loss: 0.4628 - val_accuracy: 0.7260 - val_loss: 0.5148\n",
      "Epoch 82/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7638 - loss: 0.4441 - val_accuracy: 0.7192 - val_loss: 0.5141\n",
      "Epoch 83/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7605 - loss: 0.4778 - val_accuracy: 0.7192 - val_loss: 0.5140\n",
      "Epoch 84/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7612 - loss: 0.4588 - val_accuracy: 0.7192 - val_loss: 0.5141\n",
      "Epoch 85/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7578 - loss: 0.4917 - val_accuracy: 0.7192 - val_loss: 0.5137\n",
      "Epoch 86/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.7568 - loss: 0.4730 - val_accuracy: 0.7192 - val_loss: 0.5141\n",
      "Epoch 87/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7647 - loss: 0.4789 - val_accuracy: 0.7192 - val_loss: 0.5139\n",
      "Epoch 88/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7787 - loss: 0.4348 - val_accuracy: 0.7192 - val_loss: 0.5141\n",
      "Epoch 89/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7443 - loss: 0.4703 - val_accuracy: 0.7260 - val_loss: 0.5141\n",
      "Epoch 90/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7785 - loss: 0.4456 - val_accuracy: 0.7260 - val_loss: 0.5136\n",
      "Epoch 91/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7280 - loss: 0.4691 - val_accuracy: 0.7192 - val_loss: 0.5135\n",
      "Epoch 92/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7577 - loss: 0.4672 - val_accuracy: 0.7192 - val_loss: 0.5136\n",
      "Epoch 93/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7386 - loss: 0.4807 - val_accuracy: 0.7260 - val_loss: 0.5136\n",
      "Epoch 94/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7589 - loss: 0.4894 - val_accuracy: 0.7192 - val_loss: 0.5131\n",
      "Epoch 95/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7735 - loss: 0.4506 - val_accuracy: 0.7260 - val_loss: 0.5133\n",
      "Epoch 96/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7813 - loss: 0.4578 - val_accuracy: 0.7123 - val_loss: 0.5128\n",
      "Epoch 97/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7526 - loss: 0.4691 - val_accuracy: 0.7192 - val_loss: 0.5131\n",
      "Epoch 98/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7535 - loss: 0.4596 - val_accuracy: 0.7329 - val_loss: 0.5124\n",
      "Epoch 99/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7443 - loss: 0.4805 - val_accuracy: 0.7260 - val_loss: 0.5128\n",
      "Epoch 100/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7881 - loss: 0.4533 - val_accuracy: 0.7260 - val_loss: 0.5118\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7975decdc880>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train,y_train,batch_size=32,epochs=100,initial_epoch=6,validation_data=(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "7d3d7918",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:47.694419Z",
     "iopub.status.busy": "2024-08-08T17:07:47.693977Z",
     "iopub.status.idle": "2024-08-08T17:07:47.700633Z",
     "shell.execute_reply": "2024-08-08T17:07:47.699432Z"
    },
    "papermill": {
     "duration": 0.067664,
     "end_time": "2024-08-08T17:07:47.702957",
     "exception": false,
     "start_time": "2024-08-08T17:07:47.635293",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def build_model(hp):\n",
    "    model = Sequential()\n",
    "    \n",
    "    units = hp.Int('my units',min_value = 8,max_value = 128,step=8)\n",
    "    \n",
    "    model.add(Dense(units=units, activation='relu', input_dim=10))\n",
    "    model.add(Dense(1,activation='sigmoid'))\n",
    "\n",
    "    model.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['accuracy'])\n",
    "    \n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "28dd6d72",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:47.816832Z",
     "iopub.status.busy": "2024-08-08T17:07:47.816415Z",
     "iopub.status.idle": "2024-08-08T17:07:47.852895Z",
     "shell.execute_reply": "2024-08-08T17:07:47.851985Z"
    },
    "papermill": {
     "duration": 0.095621,
     "end_time": "2024-08-08T17:07:47.855649",
     "exception": false,
     "start_time": "2024-08-08T17:07:47.760028",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuner = kt.RandomSearch(build_model,\n",
    "                       objective='val_accuracy',\n",
    "                       max_trials=5,\n",
    "                       directory='mydir2',\n",
    "                       project_name='myproject')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d9150434",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:47.967224Z",
     "iopub.status.busy": "2024-08-08T17:07:47.966828Z",
     "iopub.status.idle": "2024-08-08T17:07:57.704394Z",
     "shell.execute_reply": "2024-08-08T17:07:57.702988Z"
    },
    "papermill": {
     "duration": 9.796716,
     "end_time": "2024-08-08T17:07:57.706997",
     "exception": false,
     "start_time": "2024-08-08T17:07:47.910281",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trial 5 Complete [00h 00m 02s]\n",
      "val_accuracy: 0.7054794430732727\n",
      "\n",
      "Best val_accuracy So Far: 0.7191780805587769\n",
      "Total elapsed time: 00h 00m 10s\n"
     ]
    }
   ],
   "source": [
    "tuner.search(X_train,y_train, epochs=5,validation_data=(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "deb4fd03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:57.821028Z",
     "iopub.status.busy": "2024-08-08T17:07:57.820584Z",
     "iopub.status.idle": "2024-08-08T17:07:57.827915Z",
     "shell.execute_reply": "2024-08-08T17:07:57.826774Z"
    },
    "papermill": {
     "duration": 0.066751,
     "end_time": "2024-08-08T17:07:57.830524",
     "exception": false,
     "start_time": "2024-08-08T17:07:57.763773",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'my units': 96}"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuner.get_best_hyperparameters()[0].values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "54ffc82a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:57.943707Z",
     "iopub.status.busy": "2024-08-08T17:07:57.942762Z",
     "iopub.status.idle": "2024-08-08T17:07:58.587182Z",
     "shell.execute_reply": "2024-08-08T17:07:58.585955Z"
    },
    "papermill": {
     "duration": 0.70328,
     "end_time": "2024-08-08T17:07:58.589772",
     "exception": false,
     "start_time": "2024-08-08T17:07:57.886492",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    " model = tuner.get_best_models(num_models=1)[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "964fca17",
   "metadata": {
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2024-08-08T17:07:58.704467Z",
     "iopub.status.busy": "2024-08-08T17:07:58.703219Z",
     "iopub.status.idle": "2024-08-08T17:08:04.208835Z",
     "shell.execute_reply": "2024-08-08T17:08:04.207471Z"
    },
    "jupyter": {
     "outputs_hidden": true
    },
    "papermill": {
     "duration": 5.56518,
     "end_time": "2024-08-08T17:08:04.211342",
     "exception": false,
     "start_time": "2024-08-08T17:07:58.646162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 7/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.7203 - loss: 0.5649  \n",
      "Epoch 8/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7680 - loss: 0.5199 \n",
      "Epoch 9/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7278 - loss: 0.5237 \n",
      "Epoch 10/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7549 - loss: 0.5221 \n",
      "Epoch 11/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7235 - loss: 0.5409 \n",
      "Epoch 12/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7437 - loss: 0.5007 \n",
      "Epoch 13/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7350 - loss: 0.4880 \n",
      "Epoch 14/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7281 - loss: 0.5058 \n",
      "Epoch 15/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7383 - loss: 0.4973 \n",
      "Epoch 16/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7116 - loss: 0.5319 \n",
      "Epoch 17/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7327 - loss: 0.4878 \n",
      "Epoch 18/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7557 - loss: 0.4769 \n",
      "Epoch 19/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7321 - loss: 0.4928 \n",
      "Epoch 20/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7288 - loss: 0.4915 \n",
      "Epoch 21/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7312 - loss: 0.4907 \n",
      "Epoch 22/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7469 - loss: 0.4638 \n",
      "Epoch 23/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7319 - loss: 0.5176 \n",
      "Epoch 24/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7570 - loss: 0.4771 \n",
      "Epoch 25/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7695 - loss: 0.4758 \n",
      "Epoch 26/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7608 - loss: 0.4747 \n",
      "Epoch 27/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7637 - loss: 0.4861 \n",
      "Epoch 28/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7507 - loss: 0.4749 \n",
      "Epoch 29/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7497 - loss: 0.4784 \n",
      "Epoch 30/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7490 - loss: 0.4811 \n",
      "Epoch 31/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7682 - loss: 0.4702 \n",
      "Epoch 32/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7525 - loss: 0.4829 \n",
      "Epoch 33/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7306 - loss: 0.4947 \n",
      "Epoch 34/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7951 - loss: 0.4498 \n",
      "Epoch 35/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7270 - loss: 0.4993 \n",
      "Epoch 36/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7619 - loss: 0.4699 \n",
      "Epoch 37/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7639 - loss: 0.4744 \n",
      "Epoch 38/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7677 - loss: 0.4565 \n",
      "Epoch 39/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7939 - loss: 0.4573 \n",
      "Epoch 40/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7659 - loss: 0.4555 \n",
      "Epoch 41/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7295 - loss: 0.5129 \n",
      "Epoch 42/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7484 - loss: 0.4928 \n",
      "Epoch 43/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7416 - loss: 0.4963 \n",
      "Epoch 44/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7587 - loss: 0.4712 \n",
      "Epoch 45/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7559 - loss: 0.4855 \n",
      "Epoch 46/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7565 - loss: 0.4850 \n",
      "Epoch 47/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7633 - loss: 0.4758 \n",
      "Epoch 48/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7834 - loss: 0.4545 \n",
      "Epoch 49/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7651 - loss: 0.4905 \n",
      "Epoch 50/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7375 - loss: 0.4852 \n",
      "Epoch 51/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7267 - loss: 0.4904 \n",
      "Epoch 52/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7858 - loss: 0.4409 \n",
      "Epoch 53/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7627 - loss: 0.4926 \n",
      "Epoch 54/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7794 - loss: 0.4601 \n",
      "Epoch 55/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7618 - loss: 0.4796 \n",
      "Epoch 56/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7273 - loss: 0.4636 \n",
      "Epoch 57/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7949 - loss: 0.4528 \n",
      "Epoch 58/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7660 - loss: 0.4503 \n",
      "Epoch 59/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7479 - loss: 0.4818 \n",
      "Epoch 60/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7479 - loss: 0.4682 \n",
      "Epoch 61/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7736 - loss: 0.4467 \n",
      "Epoch 62/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7778 - loss: 0.4359 \n",
      "Epoch 63/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7895 - loss: 0.4617 \n",
      "Epoch 64/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7457 - loss: 0.4508 \n",
      "Epoch 65/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7501 - loss: 0.4673 \n",
      "Epoch 66/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7874 - loss: 0.4484 \n",
      "Epoch 67/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7379 - loss: 0.4679 \n",
      "Epoch 68/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7568 - loss: 0.4780 \n",
      "Epoch 69/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7932 - loss: 0.4486 \n",
      "Epoch 70/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7368 - loss: 0.4902 \n",
      "Epoch 71/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7532 - loss: 0.4619 \n",
      "Epoch 72/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7324 - loss: 0.4691 \n",
      "Epoch 73/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7625 - loss: 0.4536 \n",
      "Epoch 74/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7839 - loss: 0.4465 \n",
      "Epoch 75/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7420 - loss: 0.4641 \n",
      "Epoch 76/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7804 - loss: 0.4302 \n",
      "Epoch 77/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7789 - loss: 0.4351 \n",
      "Epoch 78/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7457 - loss: 0.4728 \n",
      "Epoch 79/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7834 - loss: 0.4463 \n",
      "Epoch 80/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7373 - loss: 0.4827 \n",
      "Epoch 81/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7505 - loss: 0.4524 \n",
      "Epoch 82/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7739 - loss: 0.4389 \n",
      "Epoch 83/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8069 - loss: 0.4149 \n",
      "Epoch 84/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7537 - loss: 0.4607 \n",
      "Epoch 85/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7804 - loss: 0.4476 \n",
      "Epoch 86/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7585 - loss: 0.4575 \n",
      "Epoch 87/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7745 - loss: 0.4528 \n",
      "Epoch 88/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7810 - loss: 0.4537 \n",
      "Epoch 89/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step - accuracy: 0.7401 - loss: 0.4577 \n",
      "Epoch 90/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7514 - loss: 0.4815 \n",
      "Epoch 91/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7476 - loss: 0.4509 \n",
      "Epoch 92/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7787 - loss: 0.4338 \n",
      "Epoch 93/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7543 - loss: 0.4556 \n",
      "Epoch 94/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7518 - loss: 0.4466 \n",
      "Epoch 95/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7744 - loss: 0.4731 \n",
      "Epoch 96/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7767 - loss: 0.4452 \n",
      "Epoch 97/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7928 - loss: 0.4337 \n",
      "Epoch 98/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7776 - loss: 0.4379 \n",
      "Epoch 99/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7726 - loss: 0.4541 \n",
      "Epoch 100/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7594 - loss: 0.4653 \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x79762734cf10>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train,y_train,batch_size=32,epochs=100,initial_epoch=6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "915aa4a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:08:04.362338Z",
     "iopub.status.busy": "2024-08-08T17:08:04.361907Z",
     "iopub.status.idle": "2024-08-08T17:08:04.368897Z",
     "shell.execute_reply": "2024-08-08T17:08:04.367593Z"
    },
    "papermill": {
     "duration": 0.085174,
     "end_time": "2024-08-08T17:08:04.371288",
     "exception": false,
     "start_time": "2024-08-08T17:08:04.286114",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def build_model(hp):\n",
    "    model = Sequential()\n",
    "    \n",
    "    model.add(Dense(88,activation='relu',input_dim=10))\n",
    "    \n",
    "    for i in range(hp.Int('num_layers',min_value=1,max_value=10)):\n",
    "        model.add(Dense(88, activation='relu'))\n",
    "    model.add(Dense(1,activation='sigmoid'))\n",
    "    model.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['accuracy'])\n",
    "    \n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "58b45b94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:08:04.524595Z",
     "iopub.status.busy": "2024-08-08T17:08:04.524217Z",
     "iopub.status.idle": "2024-08-08T17:08:04.576290Z",
     "shell.execute_reply": "2024-08-08T17:08:04.575230Z"
    },
    "papermill": {
     "duration": 0.131035,
     "end_time": "2024-08-08T17:08:04.579119",
     "exception": false,
     "start_time": "2024-08-08T17:08:04.448084",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tuner = kt.RandomSearch(build_model,\n",
    "                       objective='val_accuracy',\n",
    "                       max_trials=5,\n",
    "                       directory='mydir3',\n",
    "                       project_name='myproject')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "67bdbae9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:08:04.730679Z",
     "iopub.status.busy": "2024-08-08T17:08:04.730301Z",
     "iopub.status.idle": "2024-08-08T17:08:19.491727Z",
     "shell.execute_reply": "2024-08-08T17:08:19.490541Z"
    },
    "papermill": {
     "duration": 14.839114,
     "end_time": "2024-08-08T17:08:19.494001",
     "exception": false,
     "start_time": "2024-08-08T17:08:04.654887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trial 5 Complete [00h 00m 03s]\n",
      "val_accuracy: 0.7260273694992065\n",
      "\n",
      "Best val_accuracy So Far: 0.7397260069847107\n",
      "Total elapsed time: 00h 00m 15s\n"
     ]
    }
   ],
   "source": [
    "tuner.search(X_train,y_train, epochs=5,validation_data=(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "89bbded8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:08:19.645485Z",
     "iopub.status.busy": "2024-08-08T17:08:19.645068Z",
     "iopub.status.idle": "2024-08-08T17:08:19.652604Z",
     "shell.execute_reply": "2024-08-08T17:08:19.651250Z"
    },
    "papermill": {
     "duration": 0.086296,
     "end_time": "2024-08-08T17:08:19.655253",
     "exception": false,
     "start_time": "2024-08-08T17:08:19.568957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'num_layers': 3}"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuner.get_best_hyperparameters()[0].values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "15631ebd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:08:19.808772Z",
     "iopub.status.busy": "2024-08-08T17:08:19.808374Z",
     "iopub.status.idle": "2024-08-08T17:08:20.599348Z",
     "shell.execute_reply": "2024-08-08T17:08:20.598069Z"
    },
    "papermill": {
     "duration": 0.872681,
     "end_time": "2024-08-08T17:08:20.602605",
     "exception": false,
     "start_time": "2024-08-08T17:08:19.729924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/saving/saving_lib.py:576: UserWarning: Skipping variable loading for optimizer 'rmsprop', because it has 2 variables whereas the saved optimizer has 12 variables. \n",
      "  saveable.load_own_variables(weights_store.get(inner_path))\n"
     ]
    }
   ],
   "source": [
    "model = tuner.get_best_models(num_models=1)[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "77a654ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T17:08:20.752966Z",
     "iopub.status.busy": "2024-08-08T17:08:20.752522Z",
     "iopub.status.idle": "2024-08-08T17:08:30.819595Z",
     "shell.execute_reply": "2024-08-08T17:08:30.818364Z"
    },
    "papermill": {
     "duration": 10.144407,
     "end_time": "2024-08-08T17:08:30.822133",
     "exception": false,
     "start_time": "2024-08-08T17:08:20.677726",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 7/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 19ms/step - accuracy: 0.7438 - loss: 0.4926 - val_accuracy: 0.7123 - val_loss: 0.5329\n",
      "Epoch 8/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7359 - loss: 0.4890 - val_accuracy: 0.7055 - val_loss: 0.5365\n",
      "Epoch 9/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7120 - loss: 0.4828 - val_accuracy: 0.7260 - val_loss: 0.5160\n",
      "Epoch 10/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7303 - loss: 0.4714 - val_accuracy: 0.7329 - val_loss: 0.5222\n",
      "Epoch 11/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7583 - loss: 0.4759 - val_accuracy: 0.7466 - val_loss: 0.5219\n",
      "Epoch 12/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7606 - loss: 0.4714 - val_accuracy: 0.7123 - val_loss: 0.5680\n",
      "Epoch 13/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7689 - loss: 0.4778 - val_accuracy: 0.7123 - val_loss: 0.5165\n",
      "Epoch 14/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7371 - loss: 0.4660 - val_accuracy: 0.7055 - val_loss: 0.5256\n",
      "Epoch 15/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7601 - loss: 0.4475 - val_accuracy: 0.7260 - val_loss: 0.5174\n",
      "Epoch 16/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8178 - loss: 0.4017 - val_accuracy: 0.7192 - val_loss: 0.5191\n",
      "Epoch 17/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7721 - loss: 0.4154 - val_accuracy: 0.7329 - val_loss: 0.5269\n",
      "Epoch 18/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7504 - loss: 0.4623 - val_accuracy: 0.7192 - val_loss: 0.5400\n",
      "Epoch 19/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7572 - loss: 0.4480 - val_accuracy: 0.7192 - val_loss: 0.5244\n",
      "Epoch 20/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7808 - loss: 0.4084 - val_accuracy: 0.7055 - val_loss: 0.5493\n",
      "Epoch 21/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8014 - loss: 0.3989 - val_accuracy: 0.7192 - val_loss: 0.5296\n",
      "Epoch 22/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8253 - loss: 0.3864 - val_accuracy: 0.6918 - val_loss: 0.5424\n",
      "Epoch 23/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7869 - loss: 0.4157 - val_accuracy: 0.7260 - val_loss: 0.5573\n",
      "Epoch 24/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8161 - loss: 0.3864 - val_accuracy: 0.7260 - val_loss: 0.5626\n",
      "Epoch 25/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8026 - loss: 0.3876 - val_accuracy: 0.7329 - val_loss: 0.5707\n",
      "Epoch 26/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8094 - loss: 0.3806 - val_accuracy: 0.7260 - val_loss: 0.5723\n",
      "Epoch 27/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8360 - loss: 0.3550 - val_accuracy: 0.6918 - val_loss: 0.5497\n",
      "Epoch 28/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8151 - loss: 0.3950 - val_accuracy: 0.7055 - val_loss: 0.5528\n",
      "Epoch 29/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7981 - loss: 0.3732 - val_accuracy: 0.6986 - val_loss: 0.6254\n",
      "Epoch 30/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8320 - loss: 0.3570 - val_accuracy: 0.7123 - val_loss: 0.5572\n",
      "Epoch 31/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8266 - loss: 0.3938 - val_accuracy: 0.7192 - val_loss: 0.5734\n",
      "Epoch 32/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8475 - loss: 0.3450 - val_accuracy: 0.7192 - val_loss: 0.6319\n",
      "Epoch 33/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7924 - loss: 0.3663 - val_accuracy: 0.6986 - val_loss: 0.6079\n",
      "Epoch 34/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8122 - loss: 0.3695 - val_accuracy: 0.6986 - val_loss: 0.6138\n",
      "Epoch 35/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8533 - loss: 0.3250 - val_accuracy: 0.7055 - val_loss: 0.5993\n",
      "Epoch 36/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8484 - loss: 0.3276 - val_accuracy: 0.7055 - val_loss: 0.7206\n",
      "Epoch 37/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8244 - loss: 0.3489 - val_accuracy: 0.6644 - val_loss: 0.6963\n",
      "Epoch 38/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8201 - loss: 0.3556 - val_accuracy: 0.7055 - val_loss: 0.6734\n",
      "Epoch 39/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8753 - loss: 0.2957 - val_accuracy: 0.7055 - val_loss: 0.6433\n",
      "Epoch 40/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8117 - loss: 0.3558 - val_accuracy: 0.7055 - val_loss: 0.6053\n",
      "Epoch 41/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8518 - loss: 0.3102 - val_accuracy: 0.7123 - val_loss: 0.6905\n",
      "Epoch 42/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8015 - loss: 0.3629 - val_accuracy: 0.6986 - val_loss: 0.7291\n",
      "Epoch 43/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8291 - loss: 0.3471 - val_accuracy: 0.6986 - val_loss: 0.6820\n",
      "Epoch 44/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9000 - loss: 0.2660 - val_accuracy: 0.6986 - val_loss: 0.7111\n",
      "Epoch 45/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8829 - loss: 0.2960 - val_accuracy: 0.7055 - val_loss: 0.7163\n",
      "Epoch 46/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8871 - loss: 0.2755 - val_accuracy: 0.7055 - val_loss: 0.6722\n",
      "Epoch 47/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8533 - loss: 0.2842 - val_accuracy: 0.7123 - val_loss: 0.7054\n",
      "Epoch 48/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8854 - loss: 0.2735 - val_accuracy: 0.7123 - val_loss: 0.7118\n",
      "Epoch 49/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8970 - loss: 0.2557 - val_accuracy: 0.7123 - val_loss: 0.7868\n",
      "Epoch 50/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8739 - loss: 0.2829 - val_accuracy: 0.7192 - val_loss: 0.7353\n",
      "Epoch 51/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8710 - loss: 0.2559 - val_accuracy: 0.7192 - val_loss: 0.7574\n",
      "Epoch 52/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8831 - loss: 0.2751 - val_accuracy: 0.7260 - val_loss: 0.7695\n",
      "Epoch 53/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9029 - loss: 0.2478 - val_accuracy: 0.7055 - val_loss: 0.7703\n",
      "Epoch 54/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9047 - loss: 0.2472 - val_accuracy: 0.6712 - val_loss: 0.8625\n",
      "Epoch 55/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8775 - loss: 0.2481 - val_accuracy: 0.7260 - val_loss: 0.8302\n",
      "Epoch 56/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9031 - loss: 0.2467 - val_accuracy: 0.7055 - val_loss: 0.8054\n",
      "Epoch 57/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9337 - loss: 0.1880 - val_accuracy: 0.7192 - val_loss: 0.8231\n",
      "Epoch 58/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9174 - loss: 0.2153 - val_accuracy: 0.7055 - val_loss: 0.9684\n",
      "Epoch 59/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8981 - loss: 0.2357 - val_accuracy: 0.6986 - val_loss: 0.8641\n",
      "Epoch 60/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9057 - loss: 0.2275 - val_accuracy: 0.7192 - val_loss: 0.8934\n",
      "Epoch 61/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8996 - loss: 0.2353 - val_accuracy: 0.7397 - val_loss: 0.9047\n",
      "Epoch 62/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9161 - loss: 0.1972 - val_accuracy: 0.6712 - val_loss: 0.9110\n",
      "Epoch 63/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8841 - loss: 0.2386 - val_accuracy: 0.6986 - val_loss: 0.8900\n",
      "Epoch 64/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8925 - loss: 0.2398 - val_accuracy: 0.7123 - val_loss: 0.9193\n",
      "Epoch 65/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9330 - loss: 0.1965 - val_accuracy: 0.6849 - val_loss: 1.0102\n",
      "Epoch 66/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8907 - loss: 0.2250 - val_accuracy: 0.6781 - val_loss: 0.9506\n",
      "Epoch 67/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8985 - loss: 0.2152 - val_accuracy: 0.7192 - val_loss: 1.0309\n",
      "Epoch 68/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9480 - loss: 0.1560 - val_accuracy: 0.6986 - val_loss: 0.9503\n",
      "Epoch 69/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9414 - loss: 0.1711 - val_accuracy: 0.6712 - val_loss: 0.9618\n",
      "Epoch 70/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9270 - loss: 0.1793 - val_accuracy: 0.6781 - val_loss: 1.0352\n",
      "Epoch 71/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9418 - loss: 0.1579 - val_accuracy: 0.7055 - val_loss: 1.2280\n",
      "Epoch 72/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9143 - loss: 0.1954 - val_accuracy: 0.6849 - val_loss: 1.1362\n",
      "Epoch 73/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9421 - loss: 0.1466 - val_accuracy: 0.7123 - val_loss: 1.0683\n",
      "Epoch 74/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9423 - loss: 0.1609 - val_accuracy: 0.7192 - val_loss: 1.0983\n",
      "Epoch 75/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9387 - loss: 0.1764 - val_accuracy: 0.6918 - val_loss: 1.1162\n",
      "Epoch 76/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9394 - loss: 0.1546 - val_accuracy: 0.6712 - val_loss: 1.1555\n",
      "Epoch 77/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9270 - loss: 0.1766 - val_accuracy: 0.6781 - val_loss: 1.1621\n",
      "Epoch 78/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9182 - loss: 0.1668 - val_accuracy: 0.7055 - val_loss: 1.2119\n",
      "Epoch 79/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9267 - loss: 0.1493 - val_accuracy: 0.6781 - val_loss: 1.1900\n",
      "Epoch 80/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9520 - loss: 0.1234 - val_accuracy: 0.6918 - val_loss: 1.1557\n",
      "Epoch 81/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9509 - loss: 0.1508 - val_accuracy: 0.6918 - val_loss: 1.2029\n",
      "Epoch 82/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9299 - loss: 0.1539 - val_accuracy: 0.7192 - val_loss: 1.2106\n",
      "Epoch 83/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9448 - loss: 0.1453 - val_accuracy: 0.6918 - val_loss: 1.2947\n",
      "Epoch 84/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9572 - loss: 0.1263 - val_accuracy: 0.6918 - val_loss: 1.2352\n",
      "Epoch 85/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9466 - loss: 0.1375 - val_accuracy: 0.6986 - val_loss: 1.3986\n",
      "Epoch 86/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9557 - loss: 0.1336 - val_accuracy: 0.6986 - val_loss: 1.2811\n",
      "Epoch 87/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9553 - loss: 0.1108 - val_accuracy: 0.6918 - val_loss: 1.2628\n",
      "Epoch 88/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9501 - loss: 0.1267 - val_accuracy: 0.7055 - val_loss: 1.3980\n",
      "Epoch 89/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9477 - loss: 0.1161 - val_accuracy: 0.6918 - val_loss: 1.3485\n",
      "Epoch 90/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9570 - loss: 0.1081 - val_accuracy: 0.6849 - val_loss: 1.3472\n",
      "Epoch 91/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9403 - loss: 0.1311 - val_accuracy: 0.7055 - val_loss: 1.3746\n",
      "Epoch 92/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9635 - loss: 0.1115 - val_accuracy: 0.6986 - val_loss: 1.4016\n",
      "Epoch 93/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9654 - loss: 0.0834 - val_accuracy: 0.6918 - val_loss: 1.4107\n",
      "Epoch 94/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9511 - loss: 0.1375 - val_accuracy: 0.6918 - val_loss: 1.4743\n",
      "Epoch 95/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9448 - loss: 0.1237 - val_accuracy: 0.6644 - val_loss: 1.4726\n",
      "Epoch 96/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9606 - loss: 0.1204 - val_accuracy: 0.6986 - val_loss: 1.4389\n",
      "Epoch 97/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9652 - loss: 0.0890 - val_accuracy: 0.6644 - val_loss: 1.4866\n",
      "Epoch 98/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9456 - loss: 0.1161 - val_accuracy: 0.6918 - val_loss: 1.5756\n",
      "Epoch 99/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9645 - loss: 0.0902 - val_accuracy: 0.6712 - val_loss: 1.5509\n",
      "Epoch 100/100\n",
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9486 - loss: 0.1226 - val_accuracy: 0.6918 - val_loss: 1.5284\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7975afe960e0>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train,y_train,batch_size=32,epochs=100,initial_epoch=6,validation_data=(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb3dcdd4",
   "metadata": {
    "papermill": {
     "duration": 0.09122,
     "end_time": "2024-08-08T17:08:31.007363",
     "exception": false,
     "start_time": "2024-08-08T17:08:30.916143",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2607,
     "sourceId": 4342,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 97.186107,
   "end_time": "2024-08-08T17:08:33.771613",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-08T17:06:56.585506",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
